version: '3.8'

services:

  mySQL:
    image: mysql
    restart: always
    container_name: mysql
    environment:
      MYSQL_DATABASE: Web_Flux
      MYSQL_ROOT_PASSWORD: Web_Flux3306
    ports:
      - "3306:3306"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  mongo:
    image: mongo
    restart: always
    container_name: mongoDB
    environment:
      MONGO_INITDB_ROOT_USERNAME: pernudo
      MONGO_INITDB_ROOT_PASSWORD: Web_Flux27017
    ports:
      - '27017:27017'
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  mongoExpress:
    image: mongo-express
    restart: always
    container_name: mongoExpress
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: 1234
      ME_CONFIG_MONGODB_ADMINUSERNAME: pernudo
      ME_CONFIG_MONGODB_ADMINPASSWORD: Web_Flux27017
      ME_CONFIG_MONGODB_URL: mongo://pernudo:Web_Flux27017@mongo:27017/
    depends_on:
      - mongo

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
    depends_on:
      - zookeeper